
 Basic instructions to run the project generation.

* Reduce the LongVM project if needed:

   ./SubProject_longVM.py -r <region> -s <seedings> -i <input> -o <output>

   ./SubProject_longVM.py -h  for help

* Create connections for LongVM project:

   ./WiresLongVM.py <wires>

   This will produce wires.dat, memorymodules.dat and processingmodules.dat

* To generate verilog top level module:
  
   Change file names in generator_longVM.py according to the .dat files above if needed
   
   python generaror_longVM.py

-----------------------------------------------------------------

Tracklet 1.0

* Reduce the project if needed:

   python SubProject.py D3 (or D3D4, D5D6, D3D4D5D6, etc.)

   This will generate an output file: wires.reduced   


* Create the connections:

   python Wires.py wires.input.D3

(or some other input file like wires.input.fullsector or wires.reduced generated from the previous step)


* To generate verilog top level code:

python generator.py D3(or D3D4, D5, etc.)

-----------------------------------------------------------------

* To plot:

-- Prepare files for graph generation:

./Graph.py

-- Make graph in root:

root -l
root[0] .L DrawTrackletProject.C++
root[1] DrawTrackletProject()

You can also generate the 'zoomed in' views of all the processing modules
after running the Wires.py script by doing

./generatesubgraphs
